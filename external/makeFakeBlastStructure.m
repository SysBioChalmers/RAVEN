function blastStructure=makeFakeBlastStructure(orthologList,sourceModelID,getModelFor)
% makeFakeBlastStructure
%   Makes a fake blastStructure, that would normally be generated by
%   getBlast. This allows to feed a predefined list of orthologs to
%   getModelFromHomology while retaining the further use of that function.
%   For this function to work, it is crucial that the orthologList is a
%   cell array where the first column contains the genes from the source
%   organism, and the second column contains the genes from the target
%   organism
%  
%   orthologList        cell array of orthologous genes, where the first
%                       column contains the genes from the source organism,
%                       while the second column contains the genes from the
%                       target organism
%   sourceModelID       ID of the model that will be used as template, that
%                       contains the genes in the first column of
%                       orthologList
%   getModelFor         the name of the organism to build a model for,
%                       identical to the getModelFor parameter in the
%                       getModelFromHomology function
%
%   blastStructure      a fake blastStructure, where the evalue, identity
%                       and aligLen are set at extreme values, such that
%                       all orthologous pairs will pass the filter when
%                       running getModelFromHomology

if nargin<3
    error('All three parameters should be set');
end
sourceModelID=char(sourceModelID);
getModelFor=char(getModelFor);

% Check whether orthologList is a cell array, with two columns, and more
% than 10 rows
if (~iscell(orthologList) || ~(size(orthologList,2)==2) || ~(size(orthologList,1)>=10))
    error('orthologList should be a cell array with two columns');
end

blastStructure(1).fromId=sourceModelID;
blastStructure(1).toId=getModelFor;
blastStructure(1).fromGenes=orthologList(:,1);
blastStructure(1).toGenes=orthologList(:,2);

blastStructure(2).fromId=getModelFor;
blastStructure(2).toId=sourceModelID;
blastStructure(2).fromGenes=orthologList(:,2);
blastStructure(2).toGenes=orthologList(:,1);

blastStructure(1).evalue=zeros(size(orthologList,1),1);
blastStructure(2).evalue=zeros(size(orthologList,1),1);
blastStructure(1).identity(1:size(orthologList,1),1)=100;
blastStructure(2).identity(1:size(orthologList,1),1)=100;
blastStructure(1).aligLen(1:size(orthologList,1),1)=1000;
blastStructure(2).aligLen(1:size(orthologList,1),1)=1000;
blastStructure(1).bitscore(1:size(orthologList,1),1)=100;
blastStructure(2).bitscore(1:size(orthologList,1),1)=100;
blastStructure(1).ppos(1:size(orthologList,1),1)=100;
blastStructure(2).ppos(1:size(orthologList,1),1)=100;
end
